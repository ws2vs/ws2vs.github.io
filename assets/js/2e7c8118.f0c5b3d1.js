"use strict";(self.webpackChunkws2vs_github_io=self.webpackChunkws2vs_github_io||[]).push([[637],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),g=a,d=m["".concat(l,".").concat(g)]||m[g]||u[g]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9724:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={slug:"git"},i=void 0,s={unversionedId:"common-commands/git",id:"common-commands/git",title:"git",description:"git alias(\u4e5f\u53ef\u4ee5\u5199bash)",source:"@site/docs/common-commands/git.md",sourceDirName:"common-commands",slug:"/common-commands/git",permalink:"/docs/common-commands/git",draft:!1,tags:[],version:"current",frontMatter:{slug:"git"},sidebar:"tutorialSidebar",previous:{title:"centos",permalink:"/docs/common-commands/centos"},next:{title:"unix",permalink:"/docs/common-commands/unix"}},l={},c=[{value:"git alias(\u4e5f\u53ef\u4ee5\u5199bash)",id:"git-alias\u4e5f\u53ef\u4ee5\u5199bash",level:3},{value:"ssh key\u751f\u6210",id:"ssh-key\u751f\u6210",level:3},{value:"\u65b0\u589e\u7c7b\u4f3cgit\u547d\u4ee4",id:"\u65b0\u589e\u7c7b\u4f3cgit\u547d\u4ee4",level:3}],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"git-alias\u4e5f\u53ef\u4ee5\u5199bash"},"git alias(\u4e5f\u53ef\u4ee5\u5199bash)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[alias]\n    pl = pull\n        p = pull\n        pp = !sh -c 'CURRENT=`git rev-parse --abbrev-ref HEAD` && git push origin ${CURRENT}'\n        ps = !sh -c 'CURRENT=`git rev-parse --abbrev-ref HEAD` && git push origin HEAD:refs/for/${CURRENT}'\n        ll = !sh -c 'TARGET=$0 && git fetch origin ${TARGET}:${TARGET}'\n        lmg = !sh -c 'git ll $0 && git mg $0'\n        nb = checkout -b\n        db = !sh -c 'git bh -d $0 && git push origin --delete $0'\n\n        ck = !sh -c 'git checkout $0'\n        cka = checkout .\n        aa = add -A\n        cm = commit -m\n        cma = commit --amend\n        ss = status\n        s = status\n        st = stash\n        stl = stash list\n        stp = stash pop\n        l = log -3\n        mg = merge\n        bh = branch\n        cp = cherry-pick\n")),(0,a.kt)("h3",{id:"ssh-key\u751f\u6210"},"ssh key\u751f\u6210"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# \u4e00\u8def\u56de\u8f66\nssh-keygen -t rsa -C "your_email@example.com"\n')),(0,a.kt)("admonition",{title:"\u590d\u5236\u5230\u526a\u5207\u677f",type:"info"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pbcopy < ~/.ssh/id_rsa.pub\n# Copies the contents of the id_rsa.pub file to your clipboard\n")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# for windows\nclip < ~/.ssh/id_rsa.pub\n# Copies the contents of the id_rsa.pub file to your clipboard\n"))),(0,a.kt)("h3",{id:"\u65b0\u589e\u7c7b\u4f3cgit\u547d\u4ee4"},"\u65b0\u589e\u7c7b\u4f3cgit\u547d\u4ee4"),(0,a.kt)("p",null,"mac\u7248\u672c\uff08mac OS mojave \u4e4b\u524d\u9700\u8981\u91cd\u542f\u83b7\u5f97bin\u76ee\u5f55\u4e0b\u7684root\u6743\u9650\uff0c\u5177\u4f53\u53ef\u4ee5\u81ea\u884cgoogle\uff1bmojave\u4e4b\u540e\u5728\u5b89\u5168\u9690\u79c1\u90a3\u6dfb\u52a0terminal\u8fdbFull Disk Access\u5373\u53ef\uff09"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"git push",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u524d\u5f80bin\u6240\u5728\u5730: cd /usr/bin"),(0,a.kt)("li",{parentName:"ul"},"\u521b\u5efa\u6307\u4ee4: sudo touch gpp"),(0,a.kt)("li",{parentName:"ul"},"\u4fee\u6539\u6587\u4ef6\u6743\u9650: sudo chmod 777 gpp"),(0,a.kt)("li",{parentName:"ul"},"\u7f16\u8f91\u5185\u5bb9\u5982\u4e0b")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"CURRENT_BRANCH_NAME=`git rev-parse --abbrev-ref HEAD`\nTARGET_BRANCH_NAME=$1\ngit push origin ${TARGET_BRANCH_NAME:-$CURRENT_BRANCH_NAME}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"git \u62c9\u53d6\u4e00\u4e2a\u975e\u5f53\u524d\u5206\u652f\u7684\u5185\u5bb9\uff0cgit fetch",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u540cgit push\u524d\u51e0\u6b65\u9aa4"),(0,a.kt)("li",{parentName:"ul"},"\u7f16\u8f91\u5185\u5bb9\u5982\u4e0b")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"TARGET_BRANCH_NAME=$1\ngit fetch origin ${TARGET_BRANCH_NAME}:${TARGET_BRANCH_NAME}\n")))}u.isMDXComponent=!0}}]);